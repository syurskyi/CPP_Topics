Exercise 1.

Write a program that prints out in the console a simple representation of 3x3 plane. The plane
should be filled with numbers from 1 to 9 (stored in 3x3 array representing x,y coordinates of
the plane).



    1     2     3



    4     5     6



    7     8     9


The value from coordinate (1, 1) is 1 (array[0][0]).


Exercise 2.

Modify the program from exercise 1 so that the user can now place an 'X' sign on desired cell
of the plane. After printing out the 1 to 9 on the plane, the user is asked to input x and y
coordinate to put 'X'. The plane is printed again with the modified value on the inputted
coordinates. Using system("cls") clear the screen so there is only one plane printed in the console.
If you use mac check this topic: http://stackoverflow.com/questions/27616522/cannot-use-systemcls-in-xcode-in-mac
The program should work in an infinite loop so the user can fill whole plane with 'X'-s.

eg.

    1     2     3



    4     5     6



    7     8     9


The value from coordinate (1, 3) is 7 (array[2][0]).

User inputted: 
x: 3
y: 3

Output:

    1     2     3



    4     5     6



    7     8     X


User inputted:
x: 2
y: 3

Output:

    1     2     3



    4     5     6



    7     X     X

Exercise 3.

Working on the program from the exercises 1 and 2 modify the code in order to let the user
place 'X' and 'O' signs (like in tick-tack-toe game). The signs should be placed in turns
(alternately, once X, once O to simulate two players playing).


eg.

    1     2     3



    4     5     6



    7     8     9


Player 1 inputted:
x: 2
y: 3

Output:

    1     2     3



    4     5     6



    7     X     9

Player 2 inputted:
x: 1
y: 1

Output:

    O     2     3



    4     5     6



    7     X     9


Exercise 4.

Modify the program from the last three exercises in order to prevent situations where:
- values of x or y coordinates aren't in the interval <1;3>
- the inputted cell already has a 'X' or 'O' sign on it